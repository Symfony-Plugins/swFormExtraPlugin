# swFormExtraPlugin

## Widgets

* swWidgetFormDoctrineInputCheckboxGroup : represents a group of checkbox HTML tag for a model where you can select multiple values.
* swWidgetFormDoctrineSelectNestedSet : display a select with the NestedSet structure
* swWidgetFormDoctrineSelectNestedSetPosition :  display a select with the NestedSet structure and a position options. Some portions are inspired from the isicsPropelNestedSetPositionPlugin
* swWidgetFormGMapAddress : represents a gmap address widget
* swWidgetFormInputCheckboxGroup : represents a group of checkbox HTML tag for a array/callback where you can select multiple values.
* swWidgetFormJQueryMultiAutocompleter : represents an autocompleter input widget rendered by JQuery. This autocompleter can be use to display multiple values.
* swWidgetFormRadio : represents one radio HTML tag
* swWidgetFormTrilean : represents a select HTML tag : yes, no and null
* swWidgetFormjQueryStarRating : a star rating widget

## Validators

* swValidatorDoctrineNestedSetValidator : validator for swWidgetFormDoctrineInputCheckboxGroup input
* swValidatorDoctrineNestedSetValidatorPosition : validator for swWidgetFormDoctrineSelectNestedSetPosition input
* swValidatorGMapAddress : validator for swValidatorGMapAddress input
* swValidatorStupidCaptcha : stupid captcha validator input
* swValidatorText : escape any non text input
* swValidatorTextYaml : validate yaml text input
* swValidatorTrilean : validator for swWidgetFormTrilean input


## swFormHelper::resetFormLabels

This method have a lot of feature :

* reset the label translation
* define the mandatory_format (optional)
* define the error format (optional)
* secure the string input by using a middle class to avoid XSS.

Inside a form :

    [php]
    swToolboxFormHelper::resetFormLabels(sfForm $this, array(
      'prefix'                  => 'label_',
      'catalogue'               => 'catalogue',
      'mandatory_format'        => "%s <sup>*</sup>",

      'error_message_prefix'    => 'error_message_',
      'error_message_catalogue' => 'global_error_messages',
      'error_message_format'    => '<span class="error">%s</span>',

      'update_validator_string' => true | false
      'validator_string_class'  => 'swValidatorText'
    ));

Some of the settings can be set globally in the app.yml

    [yml]
    all:
      swToolbox:
        form_mandatory_format: "%s <sup>*</sup>"
        form_error_message_prefix: "error_message_"
        form_error_message_catalogue: "error_messages"
        form_update_validator_string: on
        validator_string_class: swValidatorText


Sample with parameters defined in the app.yml file. This allow to easily reuse
your form inside a plugin.

    [php]
    class DemoForm extends BaseDemoForm
    {

      public function configure()
      {

        // ... do other stuff
        swToolboxFormHelper::resetFormLabels($this, array(
          'catalogue'   =>'catalogue',
        ));
      }
    }